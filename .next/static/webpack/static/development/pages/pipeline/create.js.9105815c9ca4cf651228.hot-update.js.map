{"version":3,"file":"static/webpack/static/development/pages/pipeline/create.js.9105815c9ca4cf651228.hot-update.js","sources":["webpack:///./pages/pipeline/create.js"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Col, Form, Icon, Input, Layout, Modal, Row, Select, Upload } from 'antd';\nimport Head from 'next/head'\n\nimport HeaderComponent from '../../components/Header';\n\nconst { Content, Footer } = Layout;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst CreatePipelineForm = () => {\n\tconst [isModalOpen, toggleIsModalOpen] = useState(false);\n\tconst openYamlInput = () => { toggleIsModalOpen(true) };\n\tconst acceptYamlInput = () => { toggleIsModalOpen(true) };\n\tconst cancelYamlInput = () => toggleIsModalOpen(false);\n\n\treturn (\n\t\t<div>\n\t\t\t<Form layout=\"vertical\">\n\t\t\t\t<Form.Item label=\"Pipeline name\" >\n\t\t\t\t\t<Input placeholder=\"Pipeline name\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Select platform\" >\n\t\t\t\t\t<Select placeholder=\"Select platform\">\n\t\t\t\t\t\t<Option value=\"aws\">Amazon Web Services</Option>\n\t\t\t\t\t\t<Option value=\"gcp\">Google Cloud Platform</Option>\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Select machine\" >\n\t\t\t\t\t<Select placeholder=\"Select machine\">\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Select docker image\" >\n\t\t\t\t\t<Select placeholder=\"Select docker image\">\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"API Endpoint name\" >\n\t\t\t\t\t<Input placeholder=\"API Endpoint name\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Port number\" >\n\t\t\t\t\t<Input placeholder=\"Port number\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Python version\" >\n\t\t\t\t\t<Select placeholder=\"Python version\">\n\t\t\t\t\t\t<Option value=\"2.7.16\">2.7.16</Option>\n\t\t\t\t\t\t<Option value=\"3.7.3\">3.7.3</Option>\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Requirements.txt path\" >\n\t\t\t\t\t<Input placeholder=\"Requirements.txt path\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Repository link\" >\n\t\t\t\t\t<Input placeholder=\"Repository link\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"Commit Id\" >\n\t\t\t\t\t<Input placeholder=\"Commit Id\" />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Upload>\n\t\t\t\t\t\t<Button><Icon type=\"upload\" /> Upload YAML File</Button>\n\t\t\t\t\t</Upload>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button type=\"default\" onClick={() => openYamlInput()}>\n\t\t\t\t\t\tInput Configuration (YAML)\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\n        <Modal\n          title=\"Input Configuration (YAML)\"\n          style={{ top: 20 }}\n          visible={isModalOpen}\n          onOk={() => acceptYamlInput()}\n          onCancel={() => cancelYamlInput()}\n        >\n\t\t\t\t\t<TextArea rows={20} />\n        </Modal>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button type=\"primary\">Deploy</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nconst CreatePipeline = () => {\n  return (\n\t\t<Layout className=\"layout\">\n\n\t\t\t<Head>\n        <title>Create Pipeline</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n\n\t\t\t<HeaderComponent />\n\n\t\t\t<Content>\n\t\t\t\t<div style={{ background: '#fff', padding: 24, minHeight: 720 }}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={16} offset={4}>\n\t\t\t\t\t\t\t<CreatePipelineForm />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Content>\n\n\t\t<Footer>\n\t\t\t<Row>\n\t\t\t\t<Col span={16} offset={4}>\n\t\t\t\t\t<center><h4>Footer</h4></center>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Footer>\n  </Layout>\n  );\n};\n\nexport default CreatePipeline;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}