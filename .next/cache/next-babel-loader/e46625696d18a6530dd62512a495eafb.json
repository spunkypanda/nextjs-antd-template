{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"/Users/chinmay/Projects/praemineo/flashthrough/demo-v1/components/PipelineList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nconst {\n  Search\n} = _Input;\nconst StatusMap = {\n  running: {\n    status: 'success',\n    text: 'OK'\n  },\n  idle: {\n    status: 'default',\n    text: 'Idle'\n  },\n  processing: {\n    status: 'processing',\n    text: 'Processing'\n  },\n  stopped: {\n    status: 'error',\n    text: 'Stopped'\n  },\n  warning: {\n    status: 'warning',\n    text: 'Warning'\n  }\n};\n\nconst getStatusBadge = (statusCode = 'running') => {\n  const statusObject = StatusMap[statusCode];\n  return __jsx(_Badge, {\n    status: statusObject.status,\n    text: statusObject.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nconst columns = [{\n  title: 'Workstream',\n  dataIndex: 'workstream',\n  key: 'workstream' // render: text => <a>{text}</a>,\n\n}, {\n  title: 'Scheduler',\n  dataIndex: 'scheduler_name',\n  key: 'scheduler_name'\n}, {\n  title: 'Pipeline',\n  dataIndex: 'pipeline_name',\n  key: 'pipeline_name'\n}, {\n  title: 'Schedule',\n  dataIndex: 'schedule',\n  key: 'schedule',\n  render: () => '30 11 * * 5'\n}, {\n  title: 'Region',\n  dataIndex: 'region',\n  key: 'region' // render: text => <a>{text}</a>,\n\n}, {\n  title: 'Status',\n  dataIndex: 'status',\n  key: 'status',\n  render: () => getStatusBadge()\n}, {\n  title: 'Actions',\n  dataIndex: '',\n  key: 'x',\n  render: () => __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Delete\")\n}];\nconst defaultData = [{\n  key: '1',\n  workstream: 'Demand',\n  region: 'US East (Ohio)',\n  scheduler_name: 32,\n  pipeline_name: 'customer_rfm_weekly',\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  workstream: 'Demand',\n  region: 'US East (N. Virginia)',\n  scheduler_name: 42,\n  pipeline_name: 'customer_rfm_monthly',\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  workstream: 'Revenue',\n  region: 'US West (N. California)',\n  scheduler_name: 42,\n  pipeline_name: 'weekly_revenue',\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '4',\n  workstream: 'Revenue',\n  region: 'US West (Oregon)',\n  scheduler_name: 42,\n  pipeline_name: 'monthly_revenue',\n  address: 'London No. 1 Lake Park'\n}]; // Search by pipeline name\n// Filter by Region\n// Filter by Workstream \n\nconst PipelineList = ({\n  data = defaultData\n}) => {\n  const {\n    0: filteredInfo,\n    1: setFilteredInfo\n  } = useState(); // const [sortedInfo, setSortedInfo] = useState();\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Parameters', pagination, filters, sorter);\n    setFilteredInfo(filters);\n  };\n\n  const clearFilters = () => {\n    setFilteredInfo(null);\n  };\n\n  const clearAll = () => {\n    setFilteredInfo(null);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"table-operations\",\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(_Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(_Col, {\n    span: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Search, {\n    placeholder: \"Search\",\n    onSearch: value => console.log(value) // style={{ width:  }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), __jsx(_Col, {\n    span: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(_Button, {\n    onClick: clearFilters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Clear filters\")))), __jsx(_Table, {\n    columns: columns,\n    dataSource: data,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }));\n};\n\nexport default PipelineList;","map":{"version":3,"sources":["/Users/chinmay/Projects/praemineo/flashthrough/demo-v1/components/PipelineList.js"],"names":["useState","Search","StatusMap","running","status","text","idle","processing","stopped","warning","getStatusBadge","statusCode","statusObject","columns","title","dataIndex","key","render","defaultData","workstream","region","scheduler_name","pipeline_name","address","PipelineList","data","filteredInfo","setFilteredInfo","handleChange","pagination","filters","sorter","console","log","clearFilters","clearAll","marginBottom","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Badge, Button, Col, Input, Row, Table } from 'antd';\n\nconst { Search } = Input;\n\nconst StatusMap = {\n  running: {\n    status: 'success',\n    text: 'OK'\n  },\n  idle: {\n    status: 'default',\n    text: 'Idle'\n  },\n  processing: {\n    status: 'processing',\n    text: 'Processing'\n  },\n  stopped: {\n    status: 'error',\n    text: 'Stopped'\n  },\n  warning: {\n    status: 'warning',\n    text: 'Warning'\n  }\n};\n\nconst getStatusBadge = (statusCode = 'running') => {\n  const statusObject = StatusMap[statusCode];\n  return (<Badge status={statusObject.status} text={statusObject.text} />);\n};\n\nconst columns = [\n  {\n    title: 'Workstream',\n    dataIndex: 'workstream',\n    key: 'workstream',\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Scheduler',\n    dataIndex: 'scheduler_name',\n    key: 'scheduler_name',\n  },\n  {\n    title: 'Pipeline',\n    dataIndex: 'pipeline_name',\n    key: 'pipeline_name',\n  },\n  {\n    title: 'Schedule',\n    dataIndex: 'schedule',\n    key: 'schedule',\n    render: () => '30 11 * * 5'\n  },\n  {\n    title: 'Region',\n    dataIndex: 'region',\n    key: 'region',\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: () => getStatusBadge(),\n  },\n  {\n    title: 'Actions',\n    dataIndex: '',\n    key: 'x',\n    render: () => <a>Delete</a>,\n  },\n];\n\nconst defaultData = [\n  {\n    key: '1',\n    workstream: 'Demand',\n    region: 'US East (Ohio)',\n    scheduler_name: 32,\n    pipeline_name: 'customer_rfm_weekly',\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    workstream: 'Demand',\n    region: 'US East (N. Virginia)',\n    scheduler_name: 42,\n    pipeline_name: 'customer_rfm_monthly',\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    workstream: 'Revenue',\n    region: 'US West (N. California)',\n    scheduler_name: 42,\n    pipeline_name: 'weekly_revenue',\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    workstream: 'Revenue',\n    region: 'US West (Oregon)',\n    scheduler_name: 42,\n    pipeline_name: 'monthly_revenue',\n    address: 'London No. 1 Lake Park',\n  },\n];\n\n// Search by pipeline name\n// Filter by Region\n// Filter by Workstream \n\nconst PipelineList = ({ data = defaultData }) => {\n  const [filteredInfo, setFilteredInfo] = useState();\n  // const [sortedInfo, setSortedInfo] = useState();\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Parameters', pagination, filters, sorter);\n    setFilteredInfo(filters);\n  };\n\n  const clearFilters = () => {\n    setFilteredInfo(null);\n  };\n\n  const clearAll = () => {\n    setFilteredInfo(null);\n  };\n\n  return (\n    <div>\n      <div className=\"table-operations\" style={{ marginBottom: '10px' }}>\n        <Row>\n          <Col span={20}>\n            <Search\n              placeholder=\"Search\"\n              onSearch={value => console.log(value)}\n              // style={{ width:  }}\n            />\n          </Col>\n          <Col span={4}>\n            <Button onClick={clearFilters}>Clear filters</Button>\n          </Col>\n        </Row>\n      </div>\n      <Table columns={columns} dataSource={data} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default PipelineList;\n"]},"metadata":{},"sourceType":"module"}